name: Build, Push, Scan and Sign Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write 
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set version
      run: echo "VERSION=$(cat ${GITHUB_EVENT_PATH} | jq -r '.release.tag_name')" >> $GITHUB_ENV
      if: github.event_name == 'release'

    - name: Set short SHA
      run: echo "SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}


    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false 
        labels: ${{ steps.meta.outputs.labels }}
        tags: |
          ${{ steps.meta.outputs.tags }}
          ghcr.io/${{ github.repository }}/kindle-weather:latest
          ghcr.io/${{ github.repository }}/kindle-weather:env.SHA_SHORT }}

    - name: Scan it
      uses: anchore/scan-action@v4
      id: scan
      with:
        image: "ghcr.io/${{ github.repository }}/kindle-weather:${{ env.SHA_SHORT }}"
        fail-build: false

    - name: Upload the container scan report
      id: upload
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}
        wait-for-processing: true

    - name: Generate that SBOM
      uses: anchore/sbom-action@v0
      with:
        image: "ghcr.io/${{ github.repository }}/kindle-weather:${{ env.SHA_SHORT }}"
        artifact-name: "kindle-weather-${{ matrix.arch }}-${{ env.SHA_SHORT }}.sbom"

    - name: Get image digest
      run: |
        echo "IMAGE_DIGEST=$(docker inspect \
        ghcr.io/${{ github.repository }}/kindle-weather:${{ env.SHA_SHORT }} | \
        jq -r '.[0].Id')" >> $GITHUB_ENV

    - name: Install cosign
      uses: sigstore/cosign-installer@main

    - name: Log in to GHCR
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Sign the published Docker image
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: cosign sign -y ghcr.io/${{ github.repository }}/kindle-weather@${{ env.IMAGE_DIGEST }}

    - name: Push the signed image, other tags
      run: |
        docker push ghcr.io/${{ github.repository }}/kindle-weather:${{ env.SHA_SHORT }}
        docker push ghcr.io/${{ github.repository }}/kindle-weather:latest

          


